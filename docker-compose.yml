services:
  # Сервис постгреса, доавблен healthcheck для ожидания запуска (+ volumes)
  postgres:
    image: postgres:16.2
    container_name: postgres
    restart: always
    env_file:
      - .env

    volumes:
      - .pg:/var/lib/postgresql/data

    expose:
      - ${POSTGRES_PORT}

    ports:
      - "${POSTGRES_PORT}:5432"

    # Запускаемся тогда, когда postgresql готов
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10

    networks:
      - traefik-public

  inspect:
    container_name: inspect
    working_dir: /inspect
    env_file:
      - .env

    expose:
      - 8080

    build:
      context: .
      dockerfile: Dockerfile

    depends_on:
      postgres:
        condition: service_started

    restart: always

    volumes:
      - .game_files:/inspect/game_files

    networks:
      - traefik-public

    labels:
      - traefik.enable=true
      - traefik.http.services.inspect.loadbalancer.server.port=8080
      - traefik.http.routers.inspect.entrypoints=http
      - traefik.http.routers.inspect.rule=Host(`inspect.steamify.io`) && PathPrefix(`/inspect`)
      - traefik.http.middlewares.inspect-stripprefix.stripprefix.prefixes=/inspect
      - traefik.http.routers.inspect.middlewares=inspect-stripprefix
      - traefik.docker.network=traefik-public
      - traefik.http.routers.inspect-secure.entrypoints=https
      - traefik.http.routers.inspect-secure.rule=Host(`inspect.steamify.io`) && PathPrefix(`/inspect`)
      - traefik.http.routers.inspect-secure.tls=true
      - traefik.http.routers.inspect-secure.tls.certresolver=le
      - traefik.http.routers.inspect-secure.middlewares=https-redirect


networks:
  traefik-public:
    external: true
